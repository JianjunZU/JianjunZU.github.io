<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Kebab de JZ]]></title>
  <link href="https://jianjunzu.github.io/atom.xml" rel="self"/>
  <link href="https://jianjunzu.github.io/"/>
  <updated>2019-05-16T08:06:15+08:00</updated>
  <id>https://jianjunzu.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[Mac Mini(late 2014) 添加NVMe固态组Fusion Drive]]></title>
    <link href="https://jianjunzu.github.io/15579207868719.html"/>
    <updated>2019-05-15T19:46:26+08:00</updated>
    <id>https://jianjunzu.github.io/15579207868719.html</id>
    <content type="html"><![CDATA[
<p>我买的是Mac Mini（late 2014）中配，内置5400转1T机械硬盘，该配置即使到了2019年安装macOS Mojave系统依旧是够用的，但硬盘严重拖累了运行的速度。之前考虑到更换内置sata接口硬盘的操作略微繁琐，因此使用外置SSD的方式，将系统安装在外置SSD上，速度的确得到了提升，但是当涉及到USB拷贝之类操作的时候影响很大，而且USB3.0对2.4G Wi-Fi有干扰。后来看到了可以在只拆开后盖的情况下安装NVMe固态，于是购买材料并试验成功。</p>

<span id="more"></span><!-- more -->

<ul>
<li>
<a href="#toc_0">前期准备</a>
<ul>
<li>
<a href="#toc_1">硬盘的选择</a>
</li>
<li>
<a href="#toc_2">硬盘线和转接卡</a>
</li>
</ul>
</li>
<li>
<a href="#toc_3">上手安装</a>
<ul>
<li>
<a href="#toc_4">拆除后盖</a>
</li>
<li>
<a href="#toc_5">安装硬盘</a>
</li>
</ul>
</li>
<li>
<a href="#toc_6">组融合硬盘</a>
</li>
</ul>


<h2 id="toc_0">前期准备</h2>

<p>前期准备主要参考了这篇文章<a href="https://bbs.feng.com/read-htm-tid-11750596.html">带你飞！【Mac mini 2014 late 加装PCIe SSD纪实】</a><br/>
并根据实际做了些修改</p>

<h3 id="toc_1">硬盘的选择</h3>

<p>网上成功的经验大部分使用的是三星 960 EVO和因特尔 760P，970系列的也有试验可行的先例，<mark><strong>但是！！！目前不要买970 Evo Plus</strong></mark>，该型号太新了，不兼容，装不上macOS。三星的速度会快一些，但很多会遇到休眠问题，因特尔的速度慢一些但相对稳定，发热更少。我便是退了970 Evo Plus买了760P 256G，安装到现在没有遇到问题，虽然测速写入最多500。<br/>
当然也可以购买苹果自己的拆机硬盘，这样后续不需要买转接卡了。<br/>
<mark>购买渠道和价格：京东自营 ¥399</mark></p>

<h3 id="toc_2">硬盘线和转接卡</h3>

<p>在将硬盘插入电脑上之前还需要一个PCIe接口硬盘线型号<strong>821-00010-A</strong>，如下图所示<br/>
<img src="media/15579207868719/15579229896034.jpg" alt="硬盘线"/><br/>
如果是买的苹果自己的硬盘，那可以直接安装在这个硬盘线上，但是第三方的NVMe硬盘还需要一个转接卡，因为接口不匹配，如下图<br/>
<img src="media/15579207868719/15579234033746.jpg" alt="转接卡"/><br/>
整合后的效果盗一张别人的图<br/>
<img src="media/15579207868719/15579236442932.jpg" alt="整合安装图"/><br/>
<mark>购买渠道和价格：<a href="https://item.taobao.com/item.htm?spm=a230r.1.14.16.32ea540fqqRtMV&amp;id=568755015419&amp;ns=1&amp;abbucket=14#detail">苹果A1347 mac mini 加SSD 固态硬盘 连接线 PCIE接口821-00010-A</a> ¥85+8</mark> 这一家的套餐直接包含了硬盘线和转接卡，同时还包括了<mark>工具</mark>，因此不存在买错不匹配的问题，也不需要另外购买工具，但是需要8元运费。</p>

<h2 id="toc_3">上手安装</h2>

<h3 id="toc_4">拆除后盖</h3>

<ol>
<li>最外层的黑色后盖非常好拆，使用工具撬一下即可。</li>
<li>打开后需要用到螺丝刀，<mark>螺丝比较特殊，外六角内突起</mark>，总共6个螺丝。</li>
<li>接着要揭开金属后盖，<mark><strong>注意！金属后盖上连着Wi-Fi模块的线，需要小心打开</strong></mark>，下图红色标记，Mac mini放正的情况下从左侧小心揭开。打开后就能看到蓝色标记的PCIe接口
<img src="media/15579207868719/15579242925916.jpg" alt="拆开金属后盖"/></li>
</ol>

<h3 id="toc_5">安装硬盘</h3>

<p>将硬盘、转接卡和硬盘线三者合体，安装上去，安上螺丝即可。这里各个部分需要稍微用点力，否则容易出现未卡死位置不匹配的情况。</p>

<h2 id="toc_6">组融合硬盘</h2>

<p>⚠️<mark>注意</mark><mark>下述方法会抹除所有内容，务必注意备份</mark></p>

<ol>
<li>首先需要在内置硬盘上安装<mark>Mojave</mark>系统并且进入系统对新安装的固态进行<mark>初始化</mark>，至少也需要在<mark>High Sierra</mark>的环境下，因为更旧的版本无法支持第三方该接口的固态。</li>
<li><p>接着按照<a href="https://support.apple.com/zh-cn/HT207584">如何修复拆分的融合硬盘</a>中的第二种通用方法进行组Fusion Drive融合硬盘。<br/>
<img src="media/15579207868719/15579647974577.jpg" alt=""/></p></li>
<li><p>回到之前页面进行系统安装</p></li>
</ol>

<hr/>

<p>By JZ<br/>
<em>Less is more</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[member access within misaligned address 错误]]></title>
    <link href="https://jianjunzu.github.io/member-access.html"/>
    <updated>2019-02-03T21:25:25+08:00</updated>
    <id>https://jianjunzu.github.io/member-access.html</id>
    <content type="html"><![CDATA[
<p>在做leetcode <a href="https://leetcode.com/problems/add-two-numbers/">第2题</a>时使用C语言编写链表时报错</p>

<span id="more"></span><!-- more -->

<ul>
<li>
<a href="#toc_0">错误复现</a>
</li>
<li>
<a href="#toc_1">错误原因</a>
</li>
<li>
<a href="#toc_2">解决办法</a>
</li>
</ul>


<h2 id="toc_0">错误复现</h2>

<p>报错时的代码如下</p>

<pre><code class="language-c">/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
   
    if(l1==NULL) return l2;
    if(l2==NULL) return l1;
     
    struct ListNode* result=(struct ListNode*)malloc(sizeof(struct ListNode));
    int tmp=l1-&gt;val+l2-&gt;val;
    if(tmp&lt;10){
        result-&gt;val = tmp;
        result-&gt;next = addTwoNumbers(l1-&gt;next,l2-&gt;next);
    }else{
        result-&gt;val = tmp%10;
        struct ListNode* tmpN=(struct ListNode*)malloc(sizeof(struct ListNode));
        tmpN-&gt;val=tmp/10;
        result-&gt;next = addTwoNumbers(addTwoNumbers(l1-&gt;next,l2-&gt;next),tmpN); 
    }
    return result;
}
</code></pre>

<p>运行后报错</p>

<pre><code class="language-c">member access within misaligned address 0x000000000e91 for type &#39;struct ListNode&#39;, which requires 8 byte alignment (ListNode.c)
0x000000000e91: note: pointer points here
</code></pre>

<h2 id="toc_1">错误原因</h2>

<p>在程序倒数第6行处申请了一个<code>tmpN</code>指向的结构体<code>ListNode</code>空间，而该结构体中包含<code>next</code>指针，若该节点作为整个链表的最后一个节点，如<code>l1</code>和<code>l2</code>分别指向<code>[5]</code>和<code>[6]</code>时，此时<code>tmpN</code>指向的空间并没有初始化<code>next</code>指针，因此报错。</p>

<h2 id="toc_2">解决办法</h2>

<p>使用<code>NULL</code>初始化<code>next</code>指针指向的内容，如</p>

<pre><code class="language-c">/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
   
    if(l1==NULL) return l2;
    if(l2==NULL) return l1; 
    struct ListNode* result=(struct ListNode*)malloc(sizeof(struct ListNode));
    int tmp=l1-&gt;val+l2-&gt;val;
    if(tmp&lt;10){
        result-&gt;val = tmp;
        result-&gt;next = addTwoNumbers(l1-&gt;next,l2-&gt;next);
    }else{
        result-&gt;val = tmp%10;
        struct ListNode* tmpN=(struct ListNode*)malloc(sizeof(struct ListNode));
        tmpN-&gt;next=NULL;
        tmpN-&gt;val=tmp/10;
        result-&gt;next = addTwoNumbers(addTwoNumbers(l1-&gt;next,l2-&gt;next),tmpN);   
    }
    return result;
}
</code></pre>

<hr/>

<p>By JZ<br/>
<em>Less is more</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Office 365部分安装及同时安装Visio的方法]]></title>
    <link href="https://jianjunzu.github.io/office-365-visio.html"/>
    <updated>2019-02-01T22:55:12+08:00</updated>
    <id>https://jianjunzu.github.io/office-365-visio.html</id>
    <content type="html"><![CDATA[
<p>Win版本的Office 365安装包默认安装所有组件，没有选择的页面，在安装Office 365后再安装下载的Visio 2016专业版时，会显示计算机上已经安装了<em>即插即用</em>Office，Visio不可安装，因此可以考虑使用<a href="https://docs.microsoft.com/zh-cn/deployoffice/overview-of-the-office-2016-deployment-tool">Office部署工具</a>来解决这两个问题。</p>

<span id="more"></span><!-- more -->

<ul>
<li>
<a href="#toc_0">下载安装Office365和Visio</a>
<ul>
<li>
<a href="#toc_1">下载Office部署工具</a>
</li>
<li>
<a href="#toc_2">修改配置</a>
</li>
<li>
<a href="#toc_3">部署工具使用方法</a>
</li>
</ul>
</li>
<li>
<a href="#toc_4">激活</a>
</li>
</ul>


<h2 id="toc_0">下载安装Office365和Visio</h2>

<h3 id="toc_1">下载Office部署工具</h3>

<p>从<a href="https://www.microsoft.com/en-us/download/details.aspx?id=49117">微软下载中心</a>下载Office部署工具，运行后得到一个<code>setup.exe</code>和三个<code>XML</code>文件，选择对应的版本进行修改。</p>

<h3 id="toc_2">修改配置</h3>

<p>例如打开64位的<code>XML</code>文件后是如下内容</p>

<pre><code class="language-markup">&lt;Configuration&gt;

  &lt;Add OfficeClientEdition=&quot;64&quot; Channel=&quot;Monthly&quot;&gt;
    &lt;Product ID=&quot;O365ProPlusRetail&quot;&gt;
      &lt;Language ID=&quot;en-us&quot; /&gt;
    &lt;/Product&gt;
    &lt;Product ID=&quot;VisioProRetail&quot;&gt;
      &lt;Language ID=&quot;en-us&quot; /&gt;
    &lt;/Product&gt;
  &lt;/Add&gt;
    
&lt;/Configuration&gt;
</code></pre>

<p>该文件默认包含了英文版本的Office365 professional plus零售版和Visio 专业零售版，具体解释参照<a href="https://docs.microsoft.com/zh-cn/deployoffice/configuration-options-for-the-office-2016-deployment-tool">官网文档</a>，此处我们只需要将语言版本改成中文然后去除部分组件即可。</p>

<p>去除组件是在<code>&lt;Product&gt;</code>元素内部增加<code>&lt;ExcludeApp&gt;</code>元素，使用<code>ID</code>属性来定义需要去除的产品，包括</p>

<pre><code class="language-markup">ID=&quot;Access&quot;
ID=&quot;Excel&quot;
ID=&quot;Groove&quot;
ID=&quot;Lync&quot;
ID=&quot;OneDrive&quot;
ID=&quot;OneNote&quot;
ID=&quot;Outlook&quot;
ID=&quot;PowerPoint&quot;
ID=&quot;Publisher&quot;
ID=&quot;Word&quot;
</code></pre>

<p>使用 <strong>Groove</strong>表示OneDrive for Business，使用 <strong>Lync</strong>表示Skype for Business。</p>

<p>修改后的配置文件内容例如</p>

<pre><code class="language-markup">&lt;Configuration&gt;

  &lt;Add OfficeClientEdition=&quot;64&quot; Channel=&quot;Monthly&quot;&gt;
    &lt;Product ID=&quot;O365ProPlusRetail&quot;&gt;
      &lt;Language ID=&quot;zh-cn&quot; /&gt;
      &lt;ExcludeApp ID=&quot;Access&quot; /&gt;
      &lt;ExcludeApp ID=&quot;Groove&quot; /&gt;
      &lt;ExcludeApp ID=&quot;Lync&quot; /&gt;
      &lt;ExcludeApp ID=&quot;Publisher&quot; /&gt;
      &lt;ExcludeApp ID=&quot;OneNote&quot; /&gt;
      &lt;ExcludeApp ID=&quot;Outlook&quot; /&gt;     
    &lt;/Product&gt;
    &lt;Product ID=&quot;VisioProRetail&quot;&gt;
      &lt;Language ID=&quot;zh-cn&quot; /&gt;
    &lt;/Product&gt;
  &lt;/Add&gt;
    
&lt;/Configuration&gt;
</code></pre>

<p>此时只保留了Word，Excel，Powerpoint和Onedrive，同时安装了Visio专业零售版。</p>

<h3 id="toc_3">部署工具使用方法</h3>

<p>之前得到的<code>setup.exe</code>需要在<strong>命令行</strong>运行使用（在<code>setup.exe</code>所在文件夹按住<code>shift</code>的同时右击空白区域，点击<code>在此处打开命令窗口</code>），不同的参数将在不同模式下运行，这里只介绍会使用到的两种模式</p>

<ul>
<li>下载模式。使用<code>setup.exe /download config.xml</code>下载所需的安装文件，这里<code>config.xml</code>为之前修改的配置文件。</li>
<li>配置模式。使用<code>setup.exe /configure config.xml</code>安装或删除所选定的组件、语言包。</li>
</ul>

<p>这样，就只安装了所需的Office组件了。</p>

<h2 id="toc_4">激活</h2>

<p>Office365使用的一般都是正版，直接按指示登陆账户即可，Visio可以从<a href="http://www.xitongcheng.com/jiaocheng/dnrj_article_45661.html">这里</a>选择一个密钥进行激活，但是激活得到的是试用版，可以使用<a href="https://blog.csdn.net/A_Z666666/article/details/81165705">此文</a>给出的激活工具进行激活。</p>

<hr/>

<p>By JZ<br/>
<em>Less is more</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac使用bootcamp安装win系统花屏解决方法]]></title>
    <link href="https://jianjunzu.github.io/mac-bootcamp-win.html"/>
    <updated>2019-02-01T13:59:08+08:00</updated>
    <id>https://jianjunzu.github.io/mac-bootcamp-win.html</id>
    <content type="html"><![CDATA[
<p>15年11’乞丐版air装win屏幕花屏，很郁闷，先后找了网上很多方法，最终总结出了一个比较折中的方法，不玩游戏不使用大型3D的可以参考。</p>

<span id="more"></span><!-- more -->

<ul>
<li>
<a href="#toc_0">1 花屏现象</a>
</li>
<li>
<a href="#toc_1">2 解决方法</a>
<ul>
<li>
<a href="#toc_2">2.1 禁用驱动</a>
</li>
<li>
<a href="#toc_3">2.2 使用Microsoft基本显示适配器</a>
<ul>
<li>
<a href="#toc_4">2.2.1 禁用自动安装驱动</a>
</li>
<li>
<a href="#toc_5">2.2.2 禁用windows更新</a>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="#toc_6">3 总结</a>
</li>
</ul>


<h2 id="toc_0">1 花屏现象</h2>

<p>刚装完系统时不会产生花屏，但安装完bootcamp驱动后屏幕开始时不时出现如下图般的花屏。其实是在安装了显卡驱动后造成的，因此如果不玩游戏或者对于显卡要求不高的可以使用本文的方法。</p>

<p><img src="https://i.imgur.com/oLrX3h7.jpg" alt=""/></p>

<h2 id="toc_1">2 解决方法</h2>

<p>可以考虑禁用显卡驱动，或者使用Microsoft基本显示适配器</p>

<h3 id="toc_2">2.1 禁用驱动</h3>

<p>如下图，进入设备管理器，找到显卡驱动，右击<code>禁用</code>即可</p>

<p><img src="https://i.imgur.com/pZunUqZ.png" alt=""/></p>

<h3 id="toc_3">2.2 使用Microsoft基本显示适配器</h3>

<p>或者选择使用Microsoft基本显示适配器，同样在在上图位置，右击显卡驱</p>

<p>动后点击<code>更新驱动程序软件</code>，选择<code>浏览计算机以查找驱动程序软件</code></p>

<p><img src="https://i.imgur.com/cpbVRBR.jpg" alt=""/></p>

<p>选择<code>从计算机的设备驱动程序列表选取</code></p>

<p><img src="https://i.imgur.com/YIkcFUs.jpg" alt=""/></p>

<p>选择<code>基本显示适配器</code></p>

<p><img src="https://i.imgur.com/e4FLDDp.jpg" alt=""/></p>

<p>至此，屏幕就不会闪了</p>

<h4 id="toc_4">2.2.1 禁用自动安装驱动</h4>

<p><em><u>但是在win8及以后的系统，过一段时间后依旧可能重新开始花屏，</u></em>其原因在于win系统的自动安装驱动，因此需要关闭这一功能，网上相关方法很多，win8的可以参考<a href="https://g.pconline.com.cn/x/305/3056721.html">这里</a>，win10也类似，可自行搜索方法。</p>

<h4 id="toc_5">2.2.2 禁用windows更新</h4>

<p>一段时间后发现，即便如此还是会在一段时候后变成使用intel的显卡驱动。找了一圈后在系统更新记录里发现了原因，系统自动升级同时升级了显卡驱动，因此可以选择<strong><em>禁用windows更新</em></strong>或者改成<strong><em>由用户选择安装</em></strong>以避免升级显卡。</p>

<h2 id="toc_6">3 总结</h2>

<p>该方法只是针对于对显卡要求不高的情况，譬如我只是用来使用Office和Visio，同配置下Mac端的显然lag很多。</p>

<hr/>

<p>By JZ<br/>
<em>Less is more</em></p>

]]></content>
  </entry>
  
</feed>
